head	1.4;
access;
symbols;
locks
	root:1.4; strict;
comment	@ * @;


1.4
date	2023.08.08.09.05.02;	author mohsin;	state Exp;
branches;
next	1.3;

1.3
date	2023.08.08.07.56.48;	author mohsin;	state Exp;
branches;
next	1.2;

1.2
date	2023.07.14.12.56.06;	author mohsin;	state Exp;
branches;
next	1.1;

1.1
date	2023.07.12.15.45.33;	author mohsin;	state Exp;
branches;
next	;


desc
@unique () which takes 3 inputs as an argument
@


1.4
log
@*** empty log message ***
@
text
@#include "headers.h"
#include "dataStructures.h"
#include "declarations.h"
void* unique(void* arg)
{
	printf("%s : Begin\n", __func__);
	DSUnique *dun;
	dun = (DSUnique*)arg; 
	if (dun->noc == 0 || dun->ma == NULL)
	{
		var = 1;
		return (void*)&var;
	}
	int i;
	for (i=0; i< dun->noc; i++)
	{
		if (dun->ch == *(dun->ma + i))
		{
			var = 0;
			return (void*)&var;
		}
	}
	var = 1;
	return (void*)&var;
	printf("%s : End\n", __func__);
}
@


1.3
log
@Finding unique character
@
text
@d18 1
d21 1
@


1.2
log
@Moving printing function end line to the last of return 1 eof
@
text
@d2 1
d4 1
a4 1
int unique(char* ma, int noc, char ch)
d7 3
a9 1
	if (noc == 0 || ma == NULL)
d11 2
a12 1
		return 1;
d15 1
a15 1
	for (i=0; i<noc; i++)
d17 3
a19 2
		if (ch == *(ma + i))
			return 0;
d21 2
a22 1
	return 1;
@


1.1
log
@Initial revision
@
text
@d16 1
a17 1
	return 1;
@

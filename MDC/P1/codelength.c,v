head	1.2;
access;
symbols;
locks
	root:1.2; strict;
comment	@ * @;


1.2
date	2023.08.08.07.50.41;	author mohsin;	state Exp;
branches;
next	1.1;

1.1
date	2023.07.13.18.06.45;	author mohsin;	state Exp;
branches;
next	;


desc
@This function determines the codelength depending upon the length of ma
@


1.2
log
@Depending upon the total number of characters in the text file, choode appropriate compression program
@
text
@#include "headers.h"
#include "dataStructures.h"
#include "declarations.h"
void* codelength (void* ma)
{
	int len;
	printf("%s : Begin\n", __func__);
	len = strlen((char*)ma);
	if (len < 4)
	{
		var = 2;
	}
	else if (len < 8)
	{
		var = 3;
	}
	else if (len < 16)
	{
		var = 4;
	}
	else if (len < 32)
	{
		var = 5;
	}
	else if (len < 64)
	{
		var = 6;
	}
	else if (len < 128)
	{
		var = 7;
	}
	else
		var = -1;
	printf("%s : End\n", __func__);
	return (void*)&var;
}
@


1.1
log
@Initial revision
@
text
@d2 1
d4 1
a4 1
int codelength (char* ma)
d8 1
a8 1
	len = strlen(ma);
d11 1
a11 1
		return 2;
d15 1
a15 1
		return 3;
d19 1
a19 1
		return 4;
d23 1
a23 1
		return 5;
d27 1
a27 1
		return 6;
d31 1
a31 1
		return 7;
d33 2
d36 1
a36 1
	return -1;
@

head	1.5;
access;
symbols;
locks
	root:1.5; strict;
comment	@ * @;


1.5
date	2023.08.08.08.20.51;	author mohsin;	state Exp;
branches;
next	1.4;

1.4
date	2023.08.08.07.56.02;	author mohsin;	state Exp;
branches;
next	1.3;

1.3
date	2023.07.14.12.50.34;	author mohsin;	state Exp;
branches;
next	1.2;

1.2
date	2023.07.14.12.48.06;	author mohsin;	state Exp;
branches;
next	1.1;

1.1
date	2023.07.11.19.01.25;	author mohsin;	state Exp;
branches;
next	;


desc
@This is the main file which defines flow of Execution of the Project.
@


1.5
log
@typo
@
text
@#include "headers.h"
#include "dataStructures.h"
#include "declarations.h"
int main (void)
{
	printf("%s : Begin\n", __func__);
	init();
	while (1)
	{
		(*fptr[0])((void*)NULL); //mainMenu()
	/*	switch (choice)
		{
			case 1:
			       	(*fptr[6])(); //compressFile()	
		       		break;	       
			case 2:
			       	(*fptr[7])(); //compStats()	
		       		break;	       
			case 3:
			       	(*fptr[8])(); //decompressFile()	
		       		break;	       
			case 4:
			       	(*fptr[9])(); //decompStats()	
		       		break;	       
			case 0:
			       	(*fptr[1])("success"); //exitProg("success")	
		       		break;	       
			default:
				printf("%s : Invalid choice\n", __func__);
		} */
	}
	printf("%s : End\n", __func__);
	return 0;
}
@


1.4
log
@Added datastructures.h header file
@
text
@d10 1
a10 1
		(*fptr[0])(NULL); //mainMenu()
@


1.3
log
@typo
@
text
@d2 1
a5 1
	int choice;
d10 2
a11 2
		choice = (*mame)(); //mainMenu()
		switch (choice)
d14 1
a14 1
			       	(*copf)(); //compressFile()	
d17 1
a17 1
			       	(*cost)(); //compStats()	
d20 1
a20 1
			       	(*dcof)(); //decompressFile()	
d23 1
a23 1
			       	(*dcst)(); //decompStats()	
d26 1
a26 1
			       	(*expr)("success"); //exitProg("success")	
d30 1
a30 1
		}
@


1.2
log
@Calling every function using function pointers
@
text
@d23 1
a23 1
			       	(*dcst)() //decompStats()	
@


1.1
log
@Initial revision
@
text
@d7 1
d10 1
a10 1
		choice = mainMenu();
d14 1
a14 1
			       	compressFile();	
d17 1
a17 1
			       	compStats();	
d20 1
a20 1
			       	decompressFile();	
d23 1
a23 1
			       	decompStats();	
d26 1
a26 1
			       	exitProg("success");	
@

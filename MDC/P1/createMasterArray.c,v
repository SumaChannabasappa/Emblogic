head	1.9;
access;
symbols;
locks
	root:1.9; strict;
comment	@ * @;


1.9
date	2023.08.08.09.04.58;	author mohsin;	state Exp;
branches;
next	1.8;

1.8
date	2023.08.08.07.54.32;	author mohsin;	state Exp;
branches;
next	1.7;

1.7
date	2023.07.12.15.52.20;	author mohsin;	state Exp;
branches;
next	1.6;

1.6
date	2023.07.12.15.49.35;	author mohsin;	state Exp;
branches;
next	1.5;

1.5
date	2023.07.12.15.43.33;	author mohsin;	state Exp;
branches;
next	1.4;

1.4
date	2023.07.12.15.25.15;	author mohsin;	state Exp;
branches;
next	1.3;

1.3
date	2023.07.12.15.20.55;	author mohsin;	state Exp;
branches;
next	1.2;

1.2
date	2023.07.12.06.16.12;	author mohsin;	state Exp;
branches;
next	1.1;

1.1
date	2023.07.11.18.59.13;	author mohsin;	state Exp;
branches;
next	;


desc
@Using LSEEK() to print the total numbers of character
including EOF character (which will be removed in next version)
@


1.9
log
@typo
@
text
@#include "headers.h"
#include "dataStructures.h"
#include "declarations.h"
void* createMasterArray(void* arg)
{
	int size, i, red;
	int* fd;
	fd = (int*)arg;
	DSUnique dun;
	printf("%s : Begin\n", __func__);
	size = lseek(*fd, 0, SEEK_END)-1;
	printf("%s : Size of File : %d\n", __func__, size);
	lseek(*fd, 0, SEEK_SET);
	dun.ma = NULL;
	dun.noc = 0;
	while (size > 0)
	{
		red = read(*fd, &dun.ch, 1);
		if (red == -1)
		{
			perror("read");
			(*fptr[1])((void*)"failure");
		}
		size--;
		if ( *(int*)(*fptr[4])((void*) &dun) )  //Error
		{
			dun.ma = realloc(dun.ma, dun.noc+1); //Allocating memory location
			if (!dun.ma)
			{
				perror("read");
                        	(*fptr[1])((void*)"failure");
			}
			*(dun.ma + dun.noc++) = dun.ch;	
		}
	}
	printf("%s : There are total %d unique characters in file opened at File Descriptor : %d\n", __func__, dun.noc, *fd);
	dun.ma = realloc(dun.ma, dun.noc);
                if (!dun.ma)
                {
                        perror("read");
			(*fptr[1])((void*)"failure");
                }
                *(dun.ma + dun.noc) = '\0'; //Last character is placed as \0 which defines EOS 

	printf("%s : End\n", __func__);
	return (void*)dun.ma;
}
@


1.8
log
@Added datastructures.h header file
@
text
@d25 1
a25 1
		if ( *(int*)(*fptr[4])((void*) &dun) )
@


1.7
log
@Correcting error in printing total number of unique characters
@
text
@d2 1
d4 1
a4 1
char* createMasterArray(int fd)
d6 4
a9 3
	int size, i, red, noc;
	char* ptr_ma;
	char ch;
d11 1
a11 1
	size = lseek(fd, 0, SEEK_END)-1;
d13 3
a15 3
	lseek(fd, 0, SEEK_SET);
	ptr_ma = NULL;
	noc = 0;
d18 1
a18 1
		red = read(fd, &ch, 1);
d22 1
a22 1
			exitProg("failure");
d25 1
a25 1
		if (unique(ptr_ma, noc, ch))
d27 2
a28 2
			ptr_ma = realloc(ptr_ma, noc+1); //Allocating memory location
			if (!ptr_ma)
d31 1
a31 1
                        	exitProg("failure");
d33 1
a33 1
			*(ptr_ma + noc++) = ch;	
d36 3
a38 3
	printf("%s : There are total %d unique characters in file opened at File Descriptor : %d\n", __func__, noc, fd);
	ptr_ma = realloc(ptr_ma, noc);
                if (!ptr_ma)
d41 1
a41 1
                        exitProg("failure");
d43 1
a43 1
                *(ptr_ma + noc) = '\0'; //Last character is placed as \0 which defines EOS 
d46 1
a46 1
	return ptr_ma;
@


1.6
log
@Printing total no of unique characters in file
@
text
@d34 1
a34 1
	printf("%s : There are total %d unique characters in file opened at File Descriptor : %d\n", __func__, noc-1, fd);
@


1.5
log
@Sending charcter by charcter in order to ensure unique charcters are read to unique()
Once, all the charcters are read returns ONLY unique string to calling function compression()
@
text
@d34 1
@


1.4
log
@Just correcting declarations in file
@
text
@d23 1
a23 2
		ptr_ma = realloc(ptr_ma, noc+1); //Allocating memory location
		if (!ptr_ma)
d25 7
a31 2
			perror("read");
                        exitProg("failure");
a32 1
		*(ptr_ma + noc++) = ch;	
@


1.3
log
@Reading character by character fom the file and at the same reallocating memory after reading each character again and again using realloc().
Once, all the characters are read, filled last chgarcter as \0 to indicate end of string to system
@
text
@d23 2
a24 2
		ma = realloc(ptr_ma, noc+1); //Allocating memory location
		if (!ma)
d31 2
a32 2
	ma = realloc(ptr_ma, noc);
                if (!ma)
@


1.2
log
@The EOF character is removed from the count by subtracting 1 from LSEEK
@
text
@d5 3
a7 1
	int size;
d11 28
d40 1
a40 1
	return 0;
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
	size = lseek(fd, 0, SEEK_END);
@
